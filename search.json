[{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://cbmc-gcmp.github.io/dafishr/articles/dafisr.html","id":"downloading-raw-data-on-your-computer","dir":"Articles","previous_headings":"","what":"Downloading raw data on your computer","title":"Where to start","text":"VMS data comes organized year. function vms_download() automatically downloads store working directory VMS-data folder. Within folder raw data organized monthly folders (names Spanish) contain several .csv files usually store byweekly data intervals. file different rows different column names. highly recommend use vms_clean() function. latter corrects several inconsistencies within raw data. suggestion spot errors pleased create issue. function downloads data year 2019.","code":"library(dafishr)  vms_download(2019)"},{"path":"https://cbmc-gcmp.github.io/dafishr/articles/dafisr.html","id":"using-the-cleaning-functions","dir":"Articles","previous_headings":"","what":"Using the cleaning functions","title":"Where to start","text":"first vms_clean() function works VMS data.frame. can either load downloaded data use sample_dataset can call clean like : vms_clean() function returns message number rows cleaned contained NULL values coordinates.","code":"library(dafishr) data(\"sample_dataset\") vms_cleaned <- vms_clean(sample_dataset)"},{"path":"https://cbmc-gcmp.github.io/dafishr/articles/dafisr.html","id":"spatial-wrangling","dir":"Articles","previous_headings":"","what":"Spatial wrangling","title":"Where to start","text":"dataset wrangled, preprocessing steps follow. First, points fall inland eliminated. VMS data vessels, thus points falling inland errors data registration. upload mx_inland shapefile helps eliminating points within certain distance coastline.","code":"data(\"mx_inland\") # Shapefile of inland Mexico area vms_cleaned_land <- clean_land_points(vms_cleaned, mx_inland)"},{"path":"https://cbmc-gcmp.github.io/dafishr/articles/dafisr.html","id":"associating-port-data","dir":"Articles","previous_headings":"Spatial wrangling","what":"Associating port data","title":"Where to start","text":"land points eliminated, can use join_ports_locations() function label points vessel inside port marina. achieve using mx_ports shapefile used create buffer around port marina location. VMS point falls within buffers labelled at_port at_sea new column automatically called location. Now can check results map:","code":"data(\"mx_ports\")  # If you are just testing, it is a good idea to subsample... it takes a while on the full data!  vms_subset <- dplyr::sample_n(vms_cleaned, 1000) with_ports <- join_ports_locations(vms_subset) with_ports_sf <- sf::st_as_sf(with_ports,                          coords = c(\"longitude\", \"latitude\"),                          crs = 4326)  data(\"mx_shape\")  library(ggplot2) ggplot2::ggplot(mx_shape) +             geom_sf(col = \"gray90\") +             geom_sf(data = with_ports_sf, aes(col = location)) +             facet_wrap( ~ location) +             theme_bw()"},{"path":"https://cbmc-gcmp.github.io/dafishr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fabio Favoretto. Author, maintainer. Eduardo Leon Solorzano. Contributor.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Favoretto F (2022). dafishr: Download, Wrangle, Analyse VMS data. https://github.com/CBMC-GCMP/dafishr, https://cbmc-gcmp.github.io/dafishr, https://cbmc-gcmp.github.io/dafishr/.","code":"@Manual{,   title = {dafishr: Download, Wrangle, and Analyse VMS data},   author = {Fabio Favoretto},   year = {2022},   note = {https://github.com/CBMC-GCMP/dafishr, https://cbmc-gcmp.github.io/dafishr, https://cbmc-gcmp.github.io/dafishr/}, }"},{"path":"https://cbmc-gcmp.github.io/dafishr/index.html","id":"dafishr-","dir":"","previous_headings":"","what":"Download, Wrangle, and Analyse VMS data","title":"Download, Wrangle, and Analyse VMS data","text":"goal dafishr provide easy way download VMS analyse data Sismep Mexican Fishery Commission available Datos Abiertos initiative. Within package can find tools allows download VMS data, wrangle clean raw data, analyse tracks. VMS stands Vessel Monitoring System, adopted industrial fishing vessels monitor fishing activity. data important understand fishing activity within country, dynamics time space, monitor activity within Marine Protected Areas (MPAs). Along data VMS also provide layers used clean map information. currently working scientific manuscript related work currently review. can follow instruction using sample dataset comes along package, can use function data can download using vms_download() function. See ?vms_data details usage.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download, Wrangle, and Analyse VMS data","text":"can install dafishr : haven’t devtools package previously installed just delete comment # code run lines.","code":"# install.packages(\"devtools\") devtools::install_github(\"CBMC-GCMP/dafishr\")"},{"path":"https://cbmc-gcmp.github.io/dafishr/index.html","id":"where-to-start","dir":"","previous_headings":"","what":"Where to start","title":"Download, Wrangle, and Analyse VMS data","text":"can start using dafishr suit functions using sample_dataset provided package, can download raw-data files using vms_download function. details explained documentation vignette package. can see suit data functions available within package .","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Download, Wrangle, and Analyse VMS data","text":"package follows tidyverse programming style depends several package family downloaded automatically installed. functions can applied general object, specifically built format raw data VMS form CONAPESCA (Mexican Fishery Commission). Therefore, package focused mostly format help user analyse report data.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"Download, Wrangle, and Analyse VMS data","text":"workflow provided work progress probably errors haven’t spotted considered now. feel can contribute effort feel free creating pull request. undergrad help develop scientific projects using data welcome contact us. Please, find contact information main author , via twitter.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/all_mpas.html","id":null,"dir":"Reference","previous_headings":"","what":"Marine Protected Areas (MPAs) of Mexico — all_mpas","title":"Marine Protected Areas (MPAs) of Mexico — all_mpas","text":"sf object containing shapefiles MPA polygons Mexico","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/all_mpas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marine Protected Areas (MPAs) of Mexico — all_mpas","text":"","code":"all_mpas"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/all_mpas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Marine Protected Areas (MPAs) of Mexico — all_mpas","text":"simple feature collection 24 features 5 fields NOMBRE Name MPA Spanish CAT_DECRET Decree category, define type MPA ESTADOS State jurisdiction MPA MUNICIPIOS Municipality jurisdiction MPA REGION General regional localization MPA (Spanish) geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/all_mpas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Marine Protected Areas (MPAs) of Mexico — all_mpas","text":"http://sig.conanp.gob.mx/website/pagsig/info_shape.htm","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/clean_land_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean points falling inland — clean_land_points","title":"Clean points falling inland — clean_land_points","text":"functions eliminates points falling inland using st_difference() function sf package.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/clean_land_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean points falling inland — clean_land_points","text":"","code":"clean_land_points(x, mx_inland = mx_inland)"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/clean_land_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean points falling inland — clean_land_points","text":"x data.frame containing latitude longitude coordinates vessels tracks cleaned land area mx_inland shapefile loaded packages representing inland Mexico area, can uploaded data(\"mx_inland)","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/clean_land_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean points falling inland — clean_land_points","text":"data.frame object","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/clean_land_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean points falling inland — clean_land_points","text":"Points falling inland VMS dataset obvious mistakes, thus need eliminated data. function calls stored shapefile mx_inland custom sf object created using coastline buffer avoid eliminating points lack precision within shapefiles. function works dataset containing coordinate points crs = 4326 named latitude longitude. See first example non-VMS dataset. second example shows usage VMS sample data.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/clean_land_points.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Clean points falling inland — clean_land_points","text":"function takes !! test can use dplyr::sample_n() function shown example.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/clean_land_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean points falling inland — clean_land_points","text":"","code":"# with non VMS data x <- data.frame(   longitude = runif(1000, min = -150, max = -80),   latitude = runif(1000, min = 15, max = 35) ) data(\"mx_inland\") x <- clean_land_points(x, mx_inland) #> Spherical geometry (s2) switched off #> although coordinates are longitude/latitude, st_union assumes that they are #> planar #> although coordinates are longitude/latitude, st_difference assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout all geometries  # using sample_dataset  data(\"sample_dataset\", \"mx_inland\")  vms_cleaned <- vms_clean(sample_dataset) #> [1] 969 #> Cleaned: 969 empty rows from data!  vms_no_land <- clean_land_points(vms_cleaned, mx_inland) #> although coordinates are longitude/latitude, st_union assumes that they are #> planar #> although coordinates are longitude/latitude, st_difference assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout all geometries  # You can check the results by plotting the data  vms_cleaned_sf <- sf::st_as_sf(vms_cleaned, coords = c(\"longitude\", \"latitude\"), crs = 4326)  vms_no_land_sf <- sf::st_as_sf(vms_no_land, coords = c(\"longitude\", \"latitude\"), crs = 4326)  library(ggplot2) ggplot(vms_cleaned_sf) +   geom_sf(col = \"red\") +   geom_sf(data = vms_no_land_sf, col = \"black\")   # in the provided example only few inland points are eliminated. # There are more evident one within historical data."},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_mpa_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect fishing vessel presence within MPA polygons in Mexico — join_mpa_data","title":"Detect fishing vessel presence within MPA polygons in Mexico — join_mpa_data","text":"function spatially joins VMS points MPA polygons Mexico.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_mpa_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect fishing vessel presence within MPA polygons in Mexico — join_mpa_data","text":"","code":"join_mpa_data(x, all_mpas = all_mpas)"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_mpa_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect fishing vessel presence within MPA polygons in Mexico — join_mpa_data","text":"x data.frame VMS data must contain columns longitude latitude all_mpas shape file contains MPA polygons Mexico can upload using data(\"all_mpas\")","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_mpa_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect fishing vessel presence within MPA polygons in Mexico — join_mpa_data","text":"data.frame","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_mpa_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect fishing vessel presence within MPA polygons in Mexico — join_mpa_data","text":"adds three columns zone, mpa_decree, state, municipality, region, data MPAs polygon. zone contains name MPA (Spanish) vessel outside MPA polygon dubbed open area, mpa_decree contains type MPA (National Park, etc.), state contains Mexican state jurisdiction MPA, municipality contains Mexican municipality jurisdiction MPA, region contains overall location MPA (Spanish)","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_mpa_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect fishing vessel presence within MPA polygons in Mexico — join_mpa_data","text":"","code":"# Use sample_dataset data(\"sample_dataset\") data(\"all_mpas\") vms_cleaned <- vms_clean(sample_dataset) #> [1] 969 #> Cleaned: 969 empty rows from data!  vms_mpas <- join_mpa_data(vms_cleaned, all_mpas) #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar #> although coordinates are longitude/latitude, st_intersects assumes that they #> are planar   # Plotting data # Points NOT inside MPA are removed to reduce data size vms_mpas_sub <- vms_mpas  |>   dplyr::filter(zone != \"open area\")  vms_mpas_sf <- sf::st_as_sf(vms_mpas_sub, coords = c(\"longitude\", \"latitude\"), crs = 4326)  # Loading Mexico shapefile data(\"mx_shape\")  # Map library(ggplot2) ggplot(mx_shape, col = \"gray90\") +   geom_sf(data = all_mpas, fill = \"gray60\") +   geom_sf(data = vms_mpas_sf, aes(col = zone)) +   theme_void() +   theme(legend.position = \"\")"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_ports_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Label points when vessel is at port — join_ports_locations","title":"Label points when vessel is at port — join_ports_locations","text":"function joins ports locations using data ports buffers. mx_ports data used provided INEGI https://en.www.inegi.org.mx/","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_ports_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label points when vessel is at port — join_ports_locations","text":"","code":"join_ports_locations(x, mx_ports = mx_ports, buffer_size = 0.15)"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_ports_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label points when vessel is at port — join_ports_locations","text":"x data.frame latitude longitude coordinates mx_ports shapefile point data storing coordinates ports marina Mexico, can upload using data(\"mx_ports\") buffer_size number (double) indicating size buffer ports implement","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_ports_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label points when vessel is at port — join_ports_locations","text":"data.frame","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_ports_locations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Label points when vessel is at port — join_ports_locations","text":"function adds location column indicating vessel port sea.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/join_ports_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label points when vessel is at port — join_ports_locations","text":"","code":"# With sample data  data(\"sample_dataset\") data(\"mx_ports\") vms_cleaned <- vms_clean(sample_dataset) #> [1] 969 #> Cleaned: 969 empty rows from data!   # It is a good idea to subsample when testing... it takes a while on the full data!  vms_subset <- dplyr::sample_n(vms_cleaned, 1000) with_ports <- join_ports_locations(vms_subset) #> Warning: st_buffer does not correctly buffer longitude/latitude data #> dist is assumed to be in decimal degrees (arc_degrees). #> although coordinates are longitude/latitude, st_union assumes that they are #> planar #> although coordinates are longitude/latitude, st_difference assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout all geometries with_ports_sf <- sf::st_as_sf(with_ports, coords = c(\"longitude\", \"latitude\"), crs = 4326)  data(\"mx_shape\") library(ggplot2) ggplot(mx_shape) +   geom_sf(col = \"gray90\") +   geom_sf(data = with_ports_sf, aes(col = location)) +   facet_wrap(~location) +   theme_bw()"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/model_vms.html","id":null,"dir":"Reference","previous_headings":"","what":"Vessel Modeling with Gaussian Mixture Models — model_vms","title":"Vessel Modeling with Gaussian Mixture Models — model_vms","text":"function uses normalmixEM mixtools package model speed vessels estimates behavior. Specifically, vessel fishing activity cruising","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/model_vms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vessel Modeling with Gaussian Mixture Models — model_vms","text":"","code":"model_vms(df)"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/model_vms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vessel Modeling with Gaussian Mixture Models — model_vms","text":"df data.frame preprocessed using preprocessing_vms() function package","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/model_vms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vessel Modeling with Gaussian Mixture Models — model_vms","text":"data.frame vessel_state column type model implemented","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/model_vms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vessel Modeling with Gaussian Mixture Models — model_vms","text":"","code":"if (FALSE) { model_vms(df) }"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mpas_buffers.html","id":null,"dir":"Reference","previous_headings":"","what":"Buffer around remote Marine Protected Areas of Mexico — mpas_buffers","title":"Buffer around remote Marine Protected Areas of Mexico — mpas_buffers","text":"sf object containing shapefiles buffers around remote MPAs Mexico. buffer equals area inside MPA polygon created assess differences fishing activity inside outside remote MPAs.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mpas_buffers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Buffer around remote Marine Protected Areas of Mexico — mpas_buffers","text":"","code":"mpas_buffers"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mpas_buffers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Buffer around remote Marine Protected Areas of Mexico — mpas_buffers","text":"simple feature collection 5 features 2 fields Name Name MPAs buffer correspond Description empty geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mpas_buffers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Buffer around remote Marine Protected Areas of Mexico — mpas_buffers","text":"project","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_coastline.html","id":null,"dir":"Reference","previous_headings":"","what":"Mexican coastline — mx_coastline","title":"Mexican coastline — mx_coastline","text":"sf object containing Mexican coastline shapefile","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_coastline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mexican coastline — mx_coastline","text":"","code":"mx_coastline"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_coastline.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mexican coastline — mx_coastline","text":"simple feature collection 177 features 3 fields featurecla Name object scalerank resolution rank min_zoom zoom precision geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_coastline.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mexican coastline — mx_coastline","text":"https://cran.r-project.org/web/packages/rnaturalearth/README.html","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_coastline_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Buffer around the Mexican coastline — mx_coastline_buffer","title":"Buffer around the Mexican coastline — mx_coastline_buffer","text":"sf object containing buffer around Mexican coastline used create inland shapefile available package.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_coastline_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Buffer around the Mexican coastline — mx_coastline_buffer","text":"","code":"mx_coastline_buffer"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_coastline_buffer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Buffer around the Mexican coastline — mx_coastline_buffer","text":"simple feature collection 1 feature 3 fields featurecla Name object scalerank resolution rank min_zoom zoom precision geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_coastline_buffer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Buffer around the Mexican coastline — mx_coastline_buffer","text":"https://cran.r-project.org/web/packages/rnaturalearth/README.html","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_eez.html","id":null,"dir":"Reference","previous_headings":"","what":"Mexico shape — mx_eez","title":"Mexico shape — mx_eez","text":"sf object containing shapefile representing Mexico","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_eez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mexico shape — mx_eez","text":"","code":"mx_eez"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_eez.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mexico shape — mx_eez","text":"simple feature collection 1 features 2 fields Name empty Description empty geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_eez.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mexico shape — mx_eez","text":"https://en.www.inegi.org.mx/","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_eez_pacific.html","id":null,"dir":"Reference","previous_headings":"","what":"Economic Exclusive Zone (EEZ) of the Pacific side of Mexico — mx_eez_pacific","title":"Economic Exclusive Zone (EEZ) of the Pacific side of Mexico — mx_eez_pacific","text":"sf object containing shapefiles Mexican EEZ Pacific","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_eez_pacific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Economic Exclusive Zone (EEZ) of the Pacific side of Mexico — mx_eez_pacific","text":"","code":"mx_eez_pacific"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_eez_pacific.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Economic Exclusive Zone (EEZ) of the Pacific side of Mexico — mx_eez_pacific","text":"simple feature collection 1 feature 1 field Name Mexican Pacific Exclusive Economic Zone geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_eez_pacific.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Economic Exclusive Zone (EEZ) of the Pacific side of Mexico — mx_eez_pacific","text":"https://en.www.inegi.org.mx/","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_inland.html","id":null,"dir":"Reference","previous_headings":"","what":"Area inland of Mexico — mx_inland","title":"Area inland of Mexico — mx_inland","text":"sf object containing shapefiles inland area Mexico","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_inland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area inland of Mexico — mx_inland","text":"","code":"mx_inland"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_inland.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Area inland of Mexico — mx_inland","text":"simple feature collection 1 feature 2 fields Name Mexico Desciption empty geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_inland.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Area inland of Mexico — mx_inland","text":"modified Mexican shapefile","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_ports.html","id":null,"dir":"Reference","previous_headings":"","what":"Ports and Marinas of Mexico — mx_ports","title":"Ports and Marinas of Mexico — mx_ports","text":"sf object containing points representing locations Ports Marinas Mexico","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_ports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ports and Marinas of Mexico — mx_ports","text":"","code":"mx_ports"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_ports.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ports and Marinas of Mexico — mx_ports","text":"simple feature collection 237 features 2 fields class Type infrastructure can Puerto (Port), Marina name Name infrastructure (.e. port marina) geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_ports.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ports and Marinas of Mexico — mx_ports","text":"https://en.www.inegi.org.mx/","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Mexico mainland — mx_shape","title":"Mexico mainland — mx_shape","text":"sf object containing shapefile Mexico","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mexico mainland — mx_shape","text":"","code":"mx_shape"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_shape.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mexico mainland — mx_shape","text":"simple feature collection 1 feature 2 fields Name Mexico Description empty geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/mx_shape.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mexico mainland — mx_shape","text":"https://en.www.inegi.org.mx/","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pacific_landings.html","id":null,"dir":"Reference","previous_headings":"","what":"Catch data from the vessels in Mexico — pacific_landings","title":"Catch data from the vessels in Mexico — pacific_landings","text":"data.frame object containing catch data per vessel 2008 2021. Vessels Pacific Tuna, Sharks, Marlin catches. dataset created wrangling filtering raw data (available request authors).","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pacific_landings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catch data from the vessels in Mexico — pacific_landings","text":"","code":"pacific_landings"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pacific_landings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Catch data from the vessels in Mexico — pacific_landings","text":"data.frame  23,231 rows 5 columns date Date catch report rnp_activo Vessel RNP unique ID code vessel_name Official name vessel catch Final weight catch tons days_declared Days sea declared port","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pacific_landings.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Catch data from the vessels in Mexico — pacific_landings","text":"Data available request CONAPESCA, raw version data available request authors","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pelagic_vessels_permits.html","id":null,"dir":"Reference","previous_headings":"","what":"List of vessels with pelagic fishing permits — pelagic_vessels_permits","title":"List of vessels with pelagic fishing permits — pelagic_vessels_permits","text":"data.frame object extracted raw dataset permits available request dataMares (https://datamares.org/)","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pelagic_vessels_permits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of vessels with pelagic fishing permits — pelagic_vessels_permits","text":"","code":"pelagic_vessels_permits"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pelagic_vessels_permits.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of vessels with pelagic fishing permits — pelagic_vessels_permits","text":"data.frame 719 rows 2 columns. RNP Unique code identifing vessel vessel_name Name vessel","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pelagic_vessels_permits.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"List of vessels with pelagic fishing permits — pelagic_vessels_permits","text":"www.datamares.org","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/preprocessing_vms.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessing VMS data — preprocessing_vms","title":"Preprocessing VMS data — preprocessing_vms","text":"functions bundles cleaning functions allows easily used parallel processing speed cleaning VMS data .csv files. runs, creates folder called preprocessed store VMS data underwent preprocessing. multiple files used input (see examples ) create multiple files. outputs .fst format, allows fast upload large files. See fst package documentation information https://www.fstpackage.org/.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/preprocessing_vms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocessing VMS data — preprocessing_vms","text":"","code":"preprocessing_vms(path)"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/preprocessing_vms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocessing VMS data — preprocessing_vms","text":"path can path file downloaded data object . function used path adds file column returning data.frame object stores name file reference.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/preprocessing_vms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocessing VMS data — preprocessing_vms","text":".fst file saved within preprocessed directory automatically created stores files used input function.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/preprocessing_vms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocessing VMS data — preprocessing_vms","text":"","code":"# An example with the `sample.dataset` if (FALSE) { preprocessing_vms(sample_dataset) }  # An example on downloaded data if (FALSE) { vms_download(2019) # downloads raw data from 2019 with standard subfolders  preprocessing_vms(\"VMS-data/RLMSEP_2019/1.-ENERO/01-31 ENE 2008.csv\") }  # An example running everything in parallel on multiple files if (FALSE) {  library(future.apply) # this library is need for parallel processing library(fst) # this allows to load fst type of files  # Creating a list of file names from downloaded data (change the path if needed) file_names <- list.files(\"VMS-data/\", pattern = \".csv\", full.names = T, recursive = T)   # this plans a parallel session, set workers carefully according to your CPU capabilities plan(multisession, workers = 2)  # This runs the function in parallel system.time(   future_lapply(file_names, preprocessing_vms) ) }"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/remote_mpas.html","id":null,"dir":"Reference","previous_headings":"","what":"Remote Marine Protected Areas (MPAs) of Mexico — remote_mpas","title":"Remote Marine Protected Areas (MPAs) of Mexico — remote_mpas","text":"sf object containing shapefiles remote MPA polygons Mexico particular conservation interest","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/remote_mpas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remote Marine Protected Areas (MPAs) of Mexico — remote_mpas","text":"","code":"remote_mpas"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/remote_mpas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Remote Marine Protected Areas (MPAs) of Mexico — remote_mpas","text":"simple feature collection 5 features 2 fields Name Name remote MPA Spanish Description empty geometry column containing geometry details","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/remote_mpas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Remote Marine Protected Areas (MPAs) of Mexico — remote_mpas","text":"http://sig.conanp.gob.mx/website/pagsig/info_shape.htm","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/sample_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"VMS sample dataset from Mexican fishery commission — sample_dataset","title":"VMS sample dataset from Mexican fishery commission — sample_dataset","text":"data.frame object extracted raw dataset VMS data year 2019.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/sample_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VMS sample dataset from Mexican fishery commission — sample_dataset","text":"","code":"sample_dataset"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/sample_dataset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VMS sample dataset from Mexican fishery commission — sample_dataset","text":"data.frame 10,000 rows 9 columns. Nombre Name vessel RNP Unique code identifing vessel Puerto Base Base port vessel officially registered Permisionario o Concesionario Owner vessel partnership name FechaRecepcionUnitrac Date \"%d/%m/%Y %H:%M\" Latitud Latitude degree WGS84, crs = 4326, position vessel Longitud Longitude degree WGS84, crs = 4326, position vessel Velocidad Speed knots vessel specific time Rumbo Direction degrees vessel specific time","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/sample_dataset.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"VMS sample dataset from Mexican fishery commission — sample_dataset","text":"https://datos.gob.mx/busca/dataset/localizacion-y-monitoreo-satelital-de-embarcaciones-pesqueras","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixing dates and column names — vms_clean","title":"Fixing dates and column names — vms_clean","text":"function cleans raw VMS data column files, eliminate NULL values coordinates, parse dates, returns data.frame","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixing dates and column names — vms_clean","text":"","code":"vms_clean(path_to_data)"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixing dates and column names — vms_clean","text":"path_to_data can path file downloaded data object . function used path adds file column returning data.frame object stores name file reference.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixing dates and column names — vms_clean","text":"data.frame","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fixing dates and column names — vms_clean","text":"takes raw data file downloaded using vms_download() function specifying directly path referencing data.frame already stored R object. path used, column name raw file conveniently added future reference. also split date three new columns year, month, day, retains original date column. function can used apply functions list files can paralleled using furrr functions.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixing dates and column names — vms_clean","text":"","code":"# Using a path to a downloaded raw file if (FALSE) { vms_clean(\"VMS-data/VMS-data/RLMSEP_2019/1.- ENERO/01-10-ENE-2019.csv\") }  # Using sample dataset, or a data.frame already stored as an object data(\"sample_dataset\") cleaned_vms <- vms_clean(sample_dataset) #> [1] 969 #> Cleaned: 969 empty rows from data!  head(cleaned_vms) #> # A tibble: 6 × 13 #>      id  year month   day date                vessel_name    RNP   port_…¹ owner #>   <int> <dbl> <dbl> <int> <dttm>              <chr>          <chr> <chr>   <chr> #> 1     1  2019     1    10 2019-01-10 03:59:00 EUROPESCA IV   54809 MAZATL… EURO… #> 2     2  2019     1    10 2019-01-10 18:04:00 TABASCO 454    27041 FRONTE… ARMA… #> 3     3  2019     1     1 2019-01-01 19:37:00 AVENTURERO     63677 TAMPICO EDGA… #> 4     4  2019     1     8 2019-01-08 12:06:00 DON ANTONIO P… 17392 MAZATL… PESQ… #> 5     5  2019     1    10 2019-01-10 06:08:00 PESCAMEX 14    45526 PROGRE… PESC… #> 6     6  2019     1     4 2019-01-04 05:41:00 DON QUINTIN II 30619 TAMPICO LUIS… #> # … with 4 more variables: latitude <dbl>, longitude <dbl>, speed <dbl>, #> #   direction <dbl>, and abbreviated variable name ¹​port_base"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download VMS raw data — vms_download","title":"Download VMS raw data — vms_download","text":"functions download data form datos abiertos initiative","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download VMS raw data — vms_download","text":"","code":"vms_download(year = lubridate::year((Sys.time())) - 1)"},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download VMS raw data — vms_download","text":"year year data user wants download selected default last year. vector years can also used.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download VMS raw data — vms_download","text":"saves downloaded data folder called VMS-data within working directory","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download VMS raw data — vms_download","text":"Data downloaded link: https://www.datos.gob.mx/busca/dataset/localizacion-y-monitoreo-satelital-de-embarcaciones-pesqueras Downloaded data stored automatically VMS-data folder. Within main folder, data organized different folders months (spanish names) within multiple .csv files containing two weeks data points.","code":""},{"path":"https://cbmc-gcmp.github.io/dafishr/reference/vms_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download VMS raw data — vms_download","text":"","code":"# Download single year if (FALSE) { vms_download(2019) }  # Download multiple years if (FALSE) { vms_download(2015:2021) }"},{"path":"https://cbmc-gcmp.github.io/dafishr/news/index.html","id":"dafishr-100-20221123","dir":"Changelog","previous_headings":"","what":"dafishr 1.0.0 (2022/11/23)","title":"dafishr 1.0.0 (2022/11/23)","text":"First build","code":""}]
